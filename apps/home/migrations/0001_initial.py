# Generated by Django 4.1.3 on 2023-01-26 08:55

import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pathlib


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('model_bin', models.FileField(storage=django.core.files.storage.FileSystemStorage(location=pathlib.PureWindowsPath('G:/DACE IT/Advanced-Smart-City/media')), upload_to='models/')),
                ('model_xml', models.FileField(storage=django.core.files.storage.FileSystemStorage(location=pathlib.PureWindowsPath('G:/DACE IT/Advanced-Smart-City/media')), upload_to='models/')),
                ('floating_point_precision', models.CharField(choices=[('FP16', 'FP16'), ('FP16-INT8', 'FP16-INT8'), ('FP32', 'FP32'), ('FP64', 'FP64')], default=('FP16', 'FP16'), max_length=9)),
                ('device', models.CharField(choices=[('CPU', 'CPU'), ('GPU', 'GPU'), ('HDDL', 'HDDL'), ('MYRIAD', 'MYRIAD')], default=('CPU', 'CPU'), max_length=9)),
                ('person_label', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('vehicle_label', models.IntegerField(default=2, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('bike_label', models.IntegerField(default=3, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('threshold', models.DecimalField(decimal_places=2, default=0.5, max_digits=2, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('output_size', models.IntegerField(default=7, validators=[django.core.validators.MaxValueValidator(7), django.core.validators.MinValueValidator(7)])),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=150)),
                ('camera_name', models.CharField(max_length=150)),
                ('camera_id', models.CharField(blank=True, max_length=150, null=True)),
                ('apple_hls', models.CharField(blank=True, max_length=150, null=True)),
                ('jpeg_url', models.CharField(blank=True, max_length=150, null=True)),
                ('latitude', models.CharField(blank=True, max_length=150, null=True)),
                ('longitude', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CollisionConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collision_event_text', models.CharField(blank=True, default='Collided', max_length=150, null=True)),
                ('collision_box_color', models.CharField(blank=True, default='#FF2D00', max_length=150, null=True)),
                ('near_miss_event_text', models.CharField(blank=True, default='Near Missed!!', max_length=150, null=True)),
                ('near_miss_box_color', models.CharField(blank=True, default='#FFAD00', max_length=150, null=True)),
                ('collision_definition', models.CharField(choices=[('0', 'If two or more objects bodies touches'), ('1', 'If two or more objects intersect 25% each other'), ('2', 'If two or more objects intersect 50% each other'), ('3', 'If two or more objects intersect 75% each other')], default=('1', 'If two or more objects intersect 25% each other'), max_length=250)),
                ('near_miss_definition', models.CharField(choices=[('0', 'If two or more objects intersection is less than 25%'), ('1', 'If two or more objects intersection is less than 50%')], default=('0', 'If two or more objects intersection is less than 25%'), max_length=250)),
                ('selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GraphConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_every', models.CharField(choices=[('1', '1 Seconds'), ('5', '5 Seconds'), ('10', '10 Seconds'), ('15', '15 Seconds'), ('30', '30 Seconds'), ('60', '60 Seconds')], default=('1', '1 Seconds'), max_length=250)),
                ('vehicle_flow_label', models.CharField(blank=True, default='Vehicles', max_length=150, null=True)),
                ('vehicle_flow_color', models.CharField(blank=True, default='#5eb5ef', max_length=150, null=True)),
                ('bike_flow_label', models.CharField(blank=True, default='Bike', max_length=150, null=True)),
                ('bike_flow_color', models.CharField(blank=True, default='#ffd878', max_length=150, null=True)),
                ('person_flow_label', models.CharField(blank=True, default='Pedestrians', max_length=150, null=True)),
                ('person_flow_color', models.CharField(blank=True, default='#ff829d', max_length=150, null=True)),
                ('vehicle_analysis_label', models.CharField(blank=True, default='Vehicles', max_length=150, null=True)),
                ('vehicle_analysis_color', models.CharField(blank=True, default='#5eb5ef', max_length=150, null=True)),
                ('bike_analysis_label', models.CharField(blank=True, default='Bike', max_length=150, null=True)),
                ('bike_analysis_color', models.CharField(blank=True, default='#ffd878', max_length=150, null=True)),
                ('person_analysis_label', models.CharField(blank=True, default='Pedestrians', max_length=150, null=True)),
                ('person_analysis_color', models.CharField(blank=True, default='#ff829d', max_length=150, null=True)),
                ('collision_label', models.CharField(blank=True, default='Collisions', max_length=150, null=True)),
                ('collision_color', models.CharField(blank=True, default='#FF2D00', max_length=150, null=True)),
                ('nearmiss_label', models.CharField(blank=True, default='Near Miss', max_length=150, null=True)),
                ('nearmiss_color', models.CharField(blank=True, default='#FFAD00', max_length=150, null=True)),
                ('selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collisions', models.IntegerField(blank=True, default=0)),
                ('near_misses', models.IntegerField(blank=True, default=0)),
                ('vehicles', models.IntegerField(blank=True, default=0)),
                ('bikes', models.IntegerField(blank=True, default=0)),
                ('persons', models.IntegerField(blank=True, default=0)),
                ('current', models.BooleanField(default=False)),
                ('channel', models.ForeignKey(db_column='channel', on_delete=django.db.models.deletion.CASCADE, to='home.channel')),
            ],
        ),
        migrations.CreateModel(
            name='Output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dir_name', models.CharField(blank=True, default='Vehicles', max_length=150, null=True)),
                ('channel', models.ForeignKey(db_column='channel', on_delete=django.db.models.deletion.CASCADE, to='home.channel')),
            ],
        ),
        migrations.CreateModel(
            name='ConfigChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_object_color', models.CharField(blank=True, default='#5eb5ef', max_length=150, null=True)),
                ('vehicle_threshold', models.DecimalField(decimal_places=1, default=0.5, max_digits=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('bike_object_color', models.CharField(blank=True, default='#ffd878', max_length=150, null=True)),
                ('bike_threshold', models.DecimalField(decimal_places=1, default=0.5, max_digits=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('person_object_color', models.CharField(blank=True, default='#ff829d', max_length=150, null=True)),
                ('person_threshold', models.DecimalField(decimal_places=1, default=0.5, max_digits=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('channel', models.ForeignKey(db_column='channel', on_delete=django.db.models.deletion.CASCADE, to='home.channel')),
                ('model', models.ForeignKey(db_column='model', on_delete=django.db.models.deletion.CASCADE, to='home.aimodel')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Default Channel Group', max_length=150)),
                ('active', models.BooleanField(default=False)),
                ('slot1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot1', to='home.channel')),
                ('slot2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot2', to='home.channel')),
                ('slot3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot3', to='home.channel')),
                ('slot4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot4', to='home.channel')),
                ('slot5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot5', to='home.channel')),
                ('slot6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot6', to='home.channel')),
            ],
        ),
        migrations.CreateModel(
            name='BaseConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_object_color', models.CharField(blank=True, default='#5eb5ef', max_length=150, null=True)),
                ('vehicle_threshold', models.DecimalField(decimal_places=1, default=0.5, max_digits=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('bike_object_color', models.CharField(blank=True, default='#ffd878', max_length=150, null=True)),
                ('bike_threshold', models.DecimalField(decimal_places=1, default=0.5, max_digits=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('person_object_color', models.CharField(blank=True, default='#ff829d', max_length=150, null=True)),
                ('person_threshold', models.DecimalField(decimal_places=1, default=0.5, max_digits=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('selected', models.BooleanField(default=False)),
                ('model', models.ForeignKey(db_column='model', on_delete=django.db.models.deletion.CASCADE, to='home.aimodel')),
            ],
        ),
    ]
